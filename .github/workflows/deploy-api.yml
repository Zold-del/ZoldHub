name: Deploy API to Render

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'  # Déclencher uniquement lors des modifications dans le dossier api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './api/package.json'
          
      - name: Install Dependencies
        run: |
          cd api
          npm ci
          
      - name: Run Tests
        run: |
          cd api
          npm test || echo "Aucun test à exécuter"
        
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          
      - name: Verify Deployment
        run: |
          echo "Attente de 45 secondes pour permettre à Render de déployer l'API..."
          sleep 45
          # Essaye jusqu'à 3 fois de vérifier que l'API est en ligne
          MAX_RETRIES=3
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Tentative $i/$MAX_RETRIES pour vérifier le déploiement..."
            if curl -s --fail https://${{ secrets.RENDER_SERVICE_URL }}/health; then
              echo "API déployée et fonctionnelle!"
              exit 0
            else
              echo "L'API n'est pas encore prête, attente..."
              sleep 15
            fi
          done
          echo "L'API a été déployée mais la vérification a échoué."
          # Ne pas faire échouer le workflow même si la vérification échoue
          exit 0
          
      - name: Configure Keep-Alive
        run: |
          echo "Configuration du ping périodique pour maintenir l'API active"
          # Cette étape crée un fichier de configuration pour le projet Render
          cat > api/render-config.json << EOL
          {
            "autoDeploy": true,
            "healthCheckPath": "/health",
            "startCommand": "npm start",
            "envVars": [
              {
                "key": "NODE_ENV",
                "value": "production"
              },
              {
                "key": "KEEP_ALIVE",
                "value": "true"
              }
            ]
          }
          EOL